function ID_legend

global dPARAMS p dHANDLES

dHANDLES.hID = figure(10);

% set up column sizes
rowCount = size(p.colorTab,1);
if isempty(p.mySpID)
    colCount = 2;
    w = [.75,.25];
else
    colCount = 3;
    w = [.3,.2,.5];
end
allRows = rowCount+5;
h = 1/allRows;% +1 to save room for title

% Set up window placement & size on screen
defaultPos=[0,0.2,0.05*colCount,.02*allRows];
initAxes = 0;
if isfield(dHANDLES,'hID')
        % check if the figure already exists. If so, don't move it.
    if isvalid(dHANDLES.hID)
        defaultPos = get(dHANDLES.hID,'Position');
    else initAxes = 1;
    end
else initAxes = 1;
end

if initAxes
% open and setup figure window
set(dHANDLES.hID, ...
    'NumberTitle','off', ...
    'Name','ID Legend',...
    'Units','normalized',...
    'MenuBar','none',...
    'Position',defaultPos);
else
    clf(dHANDLES.hID)
end
% Write heading
labelStr = 'ID Color Legend';
txtPos = [0 1-h 1 h];
dHANDLES.h10handles.headTxt = uicontrol(dHANDLES.hID, ...
    'Style','text', ...
    'Units','normalized', ...
    'Position',txtPos, ...
    'String',labelStr, ...
    'FontUnits','normalized',...
    'FontSize',.75,...
    'FontWeight','bold');

% Put each color on a row
for iColor = 1:rowCount
    
    patchPos=[.02, 1-((iColor+1)*h), w(1), h];
    if strcmp(dPARAMS.ID_Toggle(iColor),'on')
        buttonState = 1;
    else
        buttonState = 0;
    end
    dHANDLES.h10handles.colorbox{iColor} = uicontrol(dHANDLES.hID,...
        'Style','togglebutton',...
        'Units','normalized',...
        'Position',patchPos,...
        'BackgroundColor',p.colorTab(iColor,:),...
        'String','',...
        'Value',buttonState,...
        'FontUnits','normalized',...
        'Callback', {@ID_toggle,iColor});
    
    labelPos=[w(1), 1-((iColor+1)*h), w(2), h];
    dHANDLES.h10handles.colorLabel{iColor} = uicontrol(dHANDLES.hID,...
        'Style','text',...
        'Units','normalized',...
        'Position',labelPos,...
        'String',num2str(iColor),...
        'FontUnits','normalized',...
        'FontSize',.5,...
        'FontWeight','bold');
    
    if ~isempty(p.mySpID)
        % if species labels are provided, add them as 3rd column
        if iColor<= length(p.mySpID)
            spPos=[sum(w(1:2)), 1-((iColor+1)*h), w(3), h];
            dHANDLES.h10handles.spLabel{iColor} = uicontrol(dHANDLES.hID,...
                'Style','text',...
                'Units','normalized',...
                'Position',spPos,...
                'String',p.mySpID{iColor},...
                'FontUnits','normalized',...
                'FontSize',.5,...
                'FontWeight','bold',...
                'HorizontalAlignment','left');
            
        end
    end
end

% add unlabeled:
if strcmp(dPARAMS.NoLabel_Toggle,'on')
    buttonState = 1;
else
    buttonState = 0;
end
% get default color
defaultColor = get(dHANDLES.LTSAsubs(1),'ColorOrder');  
iColor = iColor+2;
patchPos=[0.02, 1-((iColor)*h), w(1), h];
dHANDLES.h10handles.colorboxUnlabeled = uicontrol(dHANDLES.hID,...
    'Style','togglebutton',...
    'Units','normalized',...
    'Position',patchPos,...
    'BackgroundColor',defaultColor(1,:),...
    'String','',...
    'Value',buttonState,...
    'FontUnits','normalized',...
    'Callback', {@ID_toggle,0});

labelPos=[w(1), 1-((iColor)*h), w(2), h];
dHANDLES.h10handles.colorLabelUnlabeled = uicontrol(dHANDLES.hID,...
    'Style','text',...
    'Units','normalized',...
    'Position',labelPos,...
    'String',0,...
    'FontUnits','normalized',...
    'FontSize',.5,...
    'FontWeight','bold');

spPos=[sum(w(1:2)), 1-((iColor)*h), w(3), h];
dHANDLES.h10handles.spLabelUnlabeled = uicontrol(dHANDLES.hID,...
    'Style','text',...
    'Units','normalized',...
    'Position',spPos,...
    'String','Unlabeled',...
    'FontUnits','normalized',...
    'FontSize',.5,...
    'FontWeight','bold',...
    'HorizontalAlignment','left');

% Add false
iColor = iColor+1;
patchPos=[.02, 1-((iColor)*h), w(1), h];
if strcmp(dPARAMS.FD_Toggle,'on')
    buttonState = 1;
else
    buttonState = 0;
end
dHANDLES.h10handles.colorboxFD = uicontrol(dHANDLES.hID,...
    'Style','togglebutton',...
    'Units','normalized',...
    'Position',patchPos,...
    'BackgroundColor','red',...
    'String','',...
    'Value',buttonState,...
    'FontUnits','normalized',...
    'Callback', {@ID_toggle,99});

labelPos=[w(1), 1-((iColor)*h), w(2), h];
dHANDLES.h10handles.colorLabelFD = uicontrol(dHANDLES.hID,...
    'Style','text',...
    'Units','normalized',...
    'Position',labelPos,...
    'String',99,...
    'FontUnits','normalized',...
    'FontSize',.5,...
    'FontWeight','bold');

spPos=[sum(w(1:2)), 1-((iColor)*h), w(3), h];
dHANDLES.h10handles.spLabelFD = uicontrol(dHANDLES.hID,...
    'Style','text',...
    'Units','normalized',...
    'Position',spPos,...
    'String','False',...
    'FontUnits','normalized',...
    'FontSize',.5,...
    'FontWeight','bold',...
    'HorizontalAlignment','left');


spPos=[sum(w(1:2)), 1-((iColor)*h), w(3), h];
dHANDLES.h10handles.spLabelFD = uicontrol(dHANDLES.hID,...
    'Style','text',...
    'Units','normalized',...
    'Position',spPos,...
    'String','False',...
    'FontUnits','normalized',...
    'FontSize',.5,...
    'FontWeight','bold',...
    'HorizontalAlignment','left');

% Label confidence
if ~isfield(p, 'minLabelConfidence')
    p.minLabelConfidence = 0.95;
end
iColor = iColor+1;
labelPos=[.01, 1-((iColor)*h)-.01, w(1)*2, h];
dHANDLES.h10handles.labelConfTxt = uicontrol(dHANDLES.hID,...
    'Style','text',...
    'Units','normalized',...
    'Position',labelPos,...
    'String','Min. Label Confidence [0,1]',...
    'FontUnits','normalized',...
    'FontSize',.5,...
    'FontWeight','bold',...
    'HorizontalAlignment','left');


labelPos =[sum(w(1:2))+w(1)/2, 1-((iColor)*h), w(3)-w(1), h];
dHANDLES.h10handles.labelConfEdTxt = uicontrol(dHANDLES.hID,...
    'Style','edit',...
    'Units','normalized',...
    'Position',labelPos,...
    'String',num2str(p.minLabelConfidence),...
    'FontUnits','normalized',...
    'FontSize',.5,...
    'FontWeight','bold',...
    'HorizontalAlignment','left',...
    'Callback',{@ID_toggle,'editMinConf'});